{"name": "test_login_vwo_valid_credentials", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: session deleted because of page crash\nfrom unknown error: cannot determine loading status\nfrom tab crashed\n  (Session info: chrome=115.0.5790.171)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF70D244A62+57106]\n\t(No symbol) [0x00007FF70D1BCF52]\n\t(No symbol) [0x00007FF70D08E17D]\n\t(No symbol) [0x00007FF70D07D021]\n\t(No symbol) [0x00007FF70D07CA6E]\n\t(No symbol) [0x00007FF70D07BB4E]\n\t(No symbol) [0x00007FF70D07BAF3]\n\t(No symbol) [0x00007FF70D07A575]\n\t(No symbol) [0x00007FF70D07AEAE]\n\t(No symbol) [0x00007FF70D087F4B]\n\t(No symbol) [0x00007FF70D097E61]\n\t(No symbol) [0x00007FF70D09BFFA]\n\t(No symbol) [0x00007FF70D07B477]\n\t(No symbol) [0x00007FF70D097AF3]\n\t(No symbol) [0x00007FF70D0FE589]\n\t(No symbol) [0x00007FF70D0E6793]\n\t(No symbol) [0x00007FF70D0BCE81]\n\t(No symbol) [0x00007FF70D0BE064]\n\tGetHandleVerifier [0x00007FF70D4F4222+2873042]\n\tGetHandleVerifier [0x00007FF70D546590+3209792]\n\tGetHandleVerifier [0x00007FF70D53F3AF+3180639]\n\tGetHandleVerifier [0x00007FF70D2D5F25+652245]\n\t(No symbol) [0x00007FF70D1C8618]\n\t(No symbol) [0x00007FF70D1C47C4]\n\t(No symbol) [0x00007FF70D1C48BC]\n\t(No symbol) [0x00007FF70D1B4C33]\n\tBaseThreadInitThunk [0x00007FFF5DD226AD+29]\n\tRtlUserThreadStart [0x00007FFF5FCAAA68+40]", "trace": "chrom_options = <selenium.webdriver.chrome.options.Options object at 0x000001E1D2C25F90>\n\n    def test_login_vwo_valid_credentials(chrom_options):\n        driver = webdriver.Chrome(options=chrom_options)\n        logger.info(\"Browser Launched\")\n        driver.get(\"https://app.vwo.com/#/login\")\n        driver.find_element(By.ID, \"login-username\").send_keys(\"93npu2yyb0@esiix.com\")\n        logger.info(\"Username entered\")\n        driver.find_element(By.ID, \"login-password\").send_keys(\"Wingify@123\")\n        logger.info(\"Password entered\")\n        driver.find_element(By.ID, \"js-login-btn\").click()\n>       WebDriverWait(driver, 15).until(EC.presence_of_element_located((By.XPATH, \"//h1[@class='page-heading']\")))\n\nvwo_web_app\\test_vwo_login.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:86: in until\n    value = method(self._driver)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:82: in _predicate\n    return driver.find_element(*locator)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:739: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E1D2C34850>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: session deleted because of page ...07FF70D1B4C33]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF5DD226AD+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF5FCAAA68+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: session deleted because of page crash\nE       from unknown error: cannot determine loading status\nE       from tab crashed\nE         (Session info: chrome=115.0.5790.171)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF70D244A62+57106]\nE       \t(No symbol) [0x00007FF70D1BCF52]\nE       \t(No symbol) [0x00007FF70D08E17D]\nE       \t(No symbol) [0x00007FF70D07D021]\nE       \t(No symbol) [0x00007FF70D07CA6E]\nE       \t(No symbol) [0x00007FF70D07BB4E]\nE       \t(No symbol) [0x00007FF70D07BAF3]\nE       \t(No symbol) [0x00007FF70D07A575]\nE       \t(No symbol) [0x00007FF70D07AEAE]\nE       \t(No symbol) [0x00007FF70D087F4B]\nE       \t(No symbol) [0x00007FF70D097E61]\nE       \t(No symbol) [0x00007FF70D09BFFA]\nE       \t(No symbol) [0x00007FF70D07B477]\nE       \t(No symbol) [0x00007FF70D097AF3]\nE       \t(No symbol) [0x00007FF70D0FE589]\nE       \t(No symbol) [0x00007FF70D0E6793]\nE       \t(No symbol) [0x00007FF70D0BCE81]\nE       \t(No symbol) [0x00007FF70D0BE064]\nE       \tGetHandleVerifier [0x00007FF70D4F4222+2873042]\nE       \tGetHandleVerifier [0x00007FF70D546590+3209792]\nE       \tGetHandleVerifier [0x00007FF70D53F3AF+3180639]\nE       \tGetHandleVerifier [0x00007FF70D2D5F25+652245]\nE       \t(No symbol) [0x00007FF70D1C8618]\nE       \t(No symbol) [0x00007FF70D1C47C4]\nE       \t(No symbol) [0x00007FF70D1C48BC]\nE       \t(No symbol) [0x00007FF70D1B4C33]\nE       \tBaseThreadInitThunk [0x00007FFF5DD226AD+29]\nE       \tRtlUserThreadStart [0x00007FFF5FCAAA68+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "attachments": [{"name": "log", "source": "719c1f1d-4e43-41cb-be15-14d24dc1a6a9-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "97335365-6ed4-47a2-8976-3399a96ca65d-attachment.txt", "type": "text/plain"}], "start": 1691957804929, "stop": 1691957816548, "uuid": "b02495ca-3b51-4ad7-87dc-477cdaa550e6", "historyId": "c1ab9b785b66f874d2629cdedcf2deb0", "testCaseId": "c1ab9b785b66f874d2629cdedcf2deb0", "fullName": "vwo_web_app.test_vwo_login#test_login_vwo_valid_credentials", "labels": [{"name": "parentSuite", "value": "vwo_web_app"}, {"name": "suite", "value": "test_vwo_login"}, {"name": "host", "value": "LAPTOP-BDM6FK70"}, {"name": "thread", "value": "18656-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "vwo_web_app.test_vwo_login"}]}